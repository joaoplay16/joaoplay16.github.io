{"version":3,"file":"static/js/614.0de89587.chunk.js","mappings":"mQAiJMA,GAAmBC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,iWAgBhBC,GAAiBD,EAAAA,EAAAA,IAAO,MAAPA,CAAH,kMAYdE,GAAgBF,EAAAA,EAAAA,IAAO,MAAPA,CAAH,0OAEb,mBAAmD,IAAnD,EAAGG,sBASQ,YACX,OAA0B,GADa,EAAzBA,mBACsB,OACxB,uCAMZC,GAAgBJ,EAAAA,EAAAA,IAAO,MAAPA,CAAH,oFAObK,GAAwBL,EAAAA,EAAAA,IAAO,UAAPA,CAAH,wNAarBM,GAAiBN,EAAAA,EAAAA,IAAO,MAAPA,CAAH,gNAYdO,GAAqBP,EAAAA,EAAAA,IAAO,MAAPA,CAAH,iFAMlBQ,GAAsBR,EAAAA,EAAAA,IAAO,UAAPA,CAAH,yKAUzB,EAhOwB,WACtB,IAAMS,EAAsB,CAAC,SAAU,kBAAmB,OAAQ,kBAAmB,cAErF,GAA+CC,EAAAA,EAAAA,UAAS,GAAxD,eAAOP,EAAP,KAA2BQ,EAA3B,KAEMC,EAAS,CACb,CAAEC,IAAKC,EAAAA,GAAoBC,IAAK,+BAChC,CAAEF,IAAKG,EAAAA,GAAyBD,IAAK,+BACrC,CACEF,IAAKI,EAAAA,GACLF,IAAK,mCAEP,CACEF,IAAKK,EAAAA,GACLH,IAAK,oCAIHI,EAAUhB,EAAqBS,EAAOQ,OAAS,EAC/CC,EAAUlB,EAAqB,EAC/BmB,EAAgBD,EAAU,UAAY,SACtCE,EAAiBJ,EAAU,UAAY,SAc7C,OACE,iCACE,SAAC,KAAD,KACA,UAACpB,EAAD,CAAkByB,UAAU,YAA5B,WACE,UAACvB,EAAD,YACE,gBACEwB,GAAG,aACHC,MAAO,CAAEC,WAAYL,GACrBE,UAAU,QACVX,IAAKe,EAAAA,GACLb,IAAI,GACJc,QAjBmB,SAACC,GACxBT,GACFV,GAAiB,SAACoB,GAAD,OAAeA,EAAY,SAiBxC,SAAC7B,EAAD,CAAeC,mBAAoBA,EAAnC,gBACGS,QADH,IACGA,OADH,EACGA,EAAQoB,KAAI,SAACC,GAAD,OACX,gBAAqBpB,IAAKoB,EAAMpB,IAAKE,IAAKkB,EAAMlB,KAAtCkB,EAAMlB,WAGpB,gBACEU,GAAG,cACHC,MAAO,CAAEC,WAAYJ,GACrBC,UAAU,QACVX,IAAKqB,EAAAA,GACLnB,IAAI,GACJc,QApCoB,SAACC,GACzBX,GACFR,GAAiB,SAACoB,GAAD,OAAeA,EAAY,YAqC1C,UAAC3B,EAAD,YACE,eAAIoB,UAAU,gBAAd,gCAEA,cAAGA,UAAU,iBAAb,sRAMA,2BACE,eAAIA,UAAU,iBAAd,6GAIA,mBACA,eAAIA,UAAU,iBAAd,uKAKA,sBAEF,SAACnB,EAAD,iBACGI,QADH,IACGA,OADH,EACGA,EAAqBuB,KAAI,SAACG,GAAD,OACxB,SAAC,KAAD,CAEEX,UAAU,mBACVY,MAAM,WACNC,SAAU,EACVC,SAAU,GACVC,UAAW,EACXC,aAAc,GAPhB,SAQGL,GAPIA,SAWX,UAAC7B,EAAD,YACE,UAACC,EAAD,CAAoBiB,UAAU,cAA9B,WACE,gBAAKX,IAAK4B,EAAAA,GAAe1B,IAAI,0BAC7B,SAAC,KAAD,CACES,UAAU,6BACVkB,KAAK,2DAA2DC,OAAO,SAFzE,oCAMF,UAACpC,EAAD,CAAoBiB,UAAU,cAA9B,WACE,gBAAKX,IAAK+B,EAAAA,GAAY7B,IAAI,qBAC1B,SAAC,KAAD,CACES,UAAU,6BACVkB,KAAK,kDAAkDC,OAAO,SAFhE,oDASR,SAACnC,EAAD,WACE,SAAC,IAAD,CACEqC,oBAAoB,WACpBC,OAAO,SAAC,KAAD,iCAGX,SAAC,KAAD,CAAQrB,GAAG","sources":["pages/escape-room-timer/escape-room-timer.js"],"sourcesContent":["import { Chip, Footer, Header, LinkButton, Subtitle } from \"components\"\nimport React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport {\n  EscapeRoomTimerTimerRunning,\n  EscapeRoomTimerTimerStopped,\n  EscapeRoomTimerSettings,\n  EscapeRoomTimerGif,\n} from \"img\"\nimport {\n  SlideArrowLeftIcon,\n  SlideArrowRightIcon,\n  GithubIcon,\n  PlaystoreIcon,\n} from \"icons\"\nimport Portfolio from \"pages/home/portifolio/portfolio\"\nconst EscapeRoomTimer = () => {\n  const projectTechnologies = [\"Kotlin\", \"Jetpack Compose\", \"MVVM\", \"MediaPlayer Api\", \"Coroutines\"]\n\n  const [selectedImageIndex, setSelectedImage] = useState(0)\n\n  const images = [\n    { src: EscapeRoomTimerGif, alt: \"Escape Room Timer home, gif\" },\n    { src: EscapeRoomTimerSettings, alt: \"Escape Room Timer, settings\" },\n    {\n      src: EscapeRoomTimerTimerStopped,\n      alt: \"Escape Room Timer, timer stoped\",\n    },\n    {\n      src: EscapeRoomTimerTimerRunning,\n      alt: \"Escape Room Timer, timer stoped\",\n    },\n  ]\n\n  const hasNext = selectedImageIndex < images.length - 1\n  const hasPrev = selectedImageIndex > 0\n  const showLeftArrow = hasPrev ? \"visible\" : \"hidden\"\n  const showRightArrow = hasNext ? \"visible\" : \"hidden\"\n\n  const handleClickArrowRight = (e) => {\n    if (hasNext) {\n      setSelectedImage((prevState) => prevState + 1)\n    }\n  }\n\n  const handleClickArrowLeft = (e) => {\n    if (hasPrev) {\n      setSelectedImage((prevState) => prevState - 1)\n    }\n  }\n\n  return (\n    <>\n      <Header />\n      <ProjectContainer className=\"container\">\n        <SlideContainer>\n          <img\n            id=\"arrow-left\"\n            style={{ visibility: showLeftArrow }}\n            className=\"arrow\"\n            src={SlideArrowLeftIcon}\n            alt=\"\"\n            onClick={handleClickArrowLeft}\n          />\n          <ProjectImages selectedImageIndex={selectedImageIndex}>\n            {images?.map((image) => (\n              <img key={image.alt} src={image.src} alt={image.alt} />\n            ))}\n          </ProjectImages>\n          <img\n            id=\"arrow-right\"\n            style={{ visibility: showRightArrow }}\n            className=\"arrow\"\n            src={SlideArrowRightIcon}\n            alt=\"\"\n            onClick={handleClickArrowRight}\n          />\n        </SlideContainer>\n        <InfoContainer>\n          <h2 className=\"fon-1-l cor-0\">Escape Room Timer</h2>\n\n          <p className=\"font-2-s cor-3\">\n            Escape Room Timer é um app que simula uma bomba relógio, tente desarmá-la\n            antes que exploda, erre o código e o tempo encurtará e tudo irá\n            pelos ares. Pode ser usado em partidas de Airsoft, Paintball ou em\n            casa. Feito para divertir com os amigos.\n          </p>\n          <ul>\n            <li className=\"font-2-s cor-3\">\n              Utilizei Api MediaPlayer em conjunto com Kotlin Coroutines para reproduzir\n              os efeitos sonoros.\n            </li>\n            <br />\n            <li className=\"font-2-s cor-3\">\n              Utilizei a arquitetura MVVM, além de conceitos de estado da IU,\n              imutabilidade e uma uma única fonte de verdade com o fluxo de\n              dados unidirecional.\n            </li>\n            <br />\n          </ul>\n          <TechnologiesContainer>\n            {projectTechnologies?.map((tech) => (\n              <Chip\n                key={tech}\n                className=\"font-1-xs cor-p2\"\n                color=\"--cor-p2\"\n                paddingY={2}\n                paddingX={10}\n                lineWidth={2}\n                borderRadius={15}>\n                {tech}\n              </Chip>\n            ))}\n          </TechnologiesContainer>\n          <LinksContainer>\n            <LinkButtonWithIcon className=\"link-button\">\n              <img src={PlaystoreIcon} alt=\"Ícone Google Play\" />\n              <LinkButton\n                className=\"font-2-xs cor-0 googleplay\"\n                href=\"https://play.google.com/store/apps/developer?id=Play+Lab\" target=\"_blank\">\n                ver no google play\n              </LinkButton>\n            </LinkButtonWithIcon>\n            <LinkButtonWithIcon className=\"link-button\">\n              <img src={GithubIcon} alt=\"Ícone Github\" />\n              <LinkButton\n                className=\"font-2-xs cor-0 googleplay\"\n                href=\"https://github.com/joaoplay16/escape-room-timer\" target=\"_blank\">\n                repositório do projeto\n              </LinkButton>\n            </LinkButtonWithIcon>\n          </LinksContainer>\n        </InfoContainer>\n      </ProjectContainer>\n      <PortifolioContainer>\n        <Portfolio\n          itemBackGroundColor=\"--cor-s2\"\n          title={<Subtitle>Mais Projetos</Subtitle>}\n        />\n      </PortifolioContainer>\n      <Footer id=\"contact\" />\n    </>\n  )\n}\n\nconst ProjectContainer = styled(\"div\")`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(360px, 1fr));\n  justify-items: center;\n  align-items: start;\n  gap: 0px 60px;\n  padding: 0px 20px 60px 20px;\n\n  @media (max-width: 900px) {\n    justify-content: center;\n    grid-template-columns: 1fr;\n    row-gap: 40px;\n    padding-bottom: 10px;\n  }\n`\n\nconst SlideContainer = styled(\"div\")`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  gap: 0px 20px;\n  align-items: center;\n  justify-items: center;\n\n  .arrow {\n    padding: 0px 10px;\n  }\n`\n\nconst ProjectImages = styled(\"div\")`\n  --selected-image: calc(\n    ${({ selectedImageIndex }) => -(selectedImageIndex * 100)}%\n  );\n  display: flex;\n  overflow: hidden;\n  max-width: 300px;\n  max-height: 600px;\n\n  img {\n    padding-right: 5px;\n    transform: ${({ selectedImageIndex }) => {\n      if (selectedImageIndex == 0) return \"none\"\n      else return \"translateX(var(--selected-image))\"\n    }};\n    transition: 0.3s;\n  }\n`\n\nconst InfoContainer = styled(\"div\")`\n  ul {\n    list-style: disc;\n    margin-left: 25px;\n  }\n`\n\nconst TechnologiesContainer = styled(\"article\")`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  justify-content: start;\n  align-items: center;\n  padding-top: 34px;\n\n  @media (max-width: 480px) {\n    justify-content: center;\n  }\n`\n\nconst LinksContainer = styled(\"div\")`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 16px;\n  justify-content: space-between;\n  padding: 40px 0px;\n\n  @media (max-width: 480px) {\n    justify-content: center;\n  }\n`\n\nconst LinkButtonWithIcon = styled(\"div\")`\n  display: flex;\n  gap: 8px;\n  align-items: flex-end;\n`\n\nconst PortifolioContainer = styled(\"article\")`\n  background-color: var(--cor-s4);\n  padding-top: 60px;\n  padding-bottom: 30px;\n\n  @media (max-width: 800px) {\n    padding-top: 40px;\n  }\n`\n\nexport default EscapeRoomTimer\n"],"names":["ProjectContainer","styled","SlideContainer","ProjectImages","selectedImageIndex","InfoContainer","TechnologiesContainer","LinksContainer","LinkButtonWithIcon","PortifolioContainer","projectTechnologies","useState","setSelectedImage","images","src","EscapeRoomTimerGif","alt","EscapeRoomTimerSettings","EscapeRoomTimerTimerStopped","EscapeRoomTimerTimerRunning","hasNext","length","hasPrev","showLeftArrow","showRightArrow","className","id","style","visibility","SlideArrowLeftIcon","onClick","e","prevState","map","image","SlideArrowRightIcon","tech","color","paddingY","paddingX","lineWidth","borderRadius","PlaystoreIcon","href","target","GithubIcon","itemBackGroundColor","title"],"sourceRoot":""}